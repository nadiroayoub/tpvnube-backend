
package TPVNUBEGenTpvhostRESTAzure.uiModels.DTOA;

import TPVNUBEGenTpvhostRESTAzure.uiModels.DTO.*;
import TPVNUBEGenTpvhostRESTAzure.uiModels.DTO.utils.*;
import TPVNUBEGenTpvhostRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class CajaDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private Double saldo;
	public Double getSaldo () { return saldo; }
	public void setSaldo (Double saldo) { this.saldo = saldo; }
	
	private String descripcion;
	public String getDescripcion () { return descripcion; }
	public void setDescripcion (String descripcion) { this.descripcion = descripcion; }
	
	private Double fondo;
	public Double getFondo () { return fondo; }
	public void setFondo (Double fondo) { this.fondo = fondo; }
	
	
	/* Rol: Caja o--> DuenyoRegistrado */
	private DuenyoRegistradoDTOA duenyo;
	public DuenyoRegistradoDTOA getDuenyo () { return duenyo; }
	public void setDuenyo (DuenyoRegistradoDTOA duenyo) { this.duenyo = duenyo; }

	/* Rol: Caja o--> Cobro */
	private ArrayList<CobroDTOA> cobros;
	public ArrayList<CobroDTOA> getCobros () { return cobros; }
	public void setCobros (ArrayList<CobroDTOA> cobros) { this.cobros = cobros; }

	/* Rol: Caja o--> Negocio */
	private NegocioDTOA negocioCaja;
	public NegocioDTOA getNegocioCaja () { return negocioCaja; }
	public void setNegocioCaja (NegocioDTOA negocioCaja) { this.negocioCaja = negocioCaja; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public CajaDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Saldo")))
			{
			 
			 	String stringDouble = String.valueOf(json.opt("Saldo"));
 				this.saldo = Double.parseDouble(stringDouble);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Descripcion")))
			{
			 
				this.descripcion = (String) json.opt("Descripcion");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Fondo")))
			{
			 
			 	String stringDouble = String.valueOf(json.opt("Fondo"));
 				this.fondo = Double.parseDouble(stringDouble);
			 
			}
			

			JSONObject jsonDuenyo = json.optJSONObject("Duenyo");
			if (jsonDuenyo != null)
			{
				DuenyoRegistradoDTOA tmp = new DuenyoRegistradoDTOA();
				tmp.setFromJSON(jsonDuenyo);
				this.duenyo = tmp;
			}


			JSONObject jsonCobros = json.optJSONObject("Cobros");
			if (jsonCobros != null)
			{
				CobroDTOA tmp = new CobroDTOA();
				tmp.setFromJSON(jsonCobros);
				this.cobros = tmp;
			}


			JSONObject jsonNegocioCaja = json.optJSONObject("NegocioCaja");
			if (jsonNegocioCaja != null)
			{
				NegocioDTOA tmp = new NegocioDTOA();
				tmp.setFromJSON(jsonNegocioCaja);
				this.negocioCaja = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.saldo != null)
			json.put("Saldo", this.saldo);
		
		
		  if (this.descripcion != null)
			json.put("Descripcion", this.descripcion);
		
		
		  if (this.fondo != null)
			json.put("Fondo", this.fondo);
		
			

			if (this.duenyo != null)
			{
				json.put("Duenyo", this.duenyo.toJSON());
			}


			if (this.cobros != null)
			{
				json.put("Cobros", this.cobros.toJSON());
			}


			if (this.negocioCaja != null)
			{
				json.put("NegocioCaja", this.negocioCaja.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		CajaDTO dto = new CajaDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setSaldo (this.getSaldo());

	dto.setDescripcion (this.getDescripcion());

	dto.setFondo (this.getFondo());

		
		
		// Roles
					// TODO: from DTOA [ Duenyo ] (dataType : DuenyoRegistradoDTOA) to DTO [ Duenyo ]
					// TODO: from DTOA [ Cobros ] (dataType : ArrayList<CobroDTOA>) to DTO [ Cobro ]
					// TODO: from DTOA [ NegocioCaja ] (dataType : NegocioDTOA) to DTO [ Negocio ]
		
		
		return dto;
	}

	// endregion
}

	