
package TPVNUBEGenEmpleadoRESTAzure.uiModels.DTOA;

import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.*;
import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.utils.*;
import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class LineaPedidoDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private Integer cantidad;
	public Integer getCantidad () { return cantidad; }
	public void setCantidad (Integer cantidad) { this.cantidad = cantidad; }
	
	
	/* GetAll: Plato */
	private ArrayList<PlatoDTOA> platos;
	public ArrayList<PlatoDTOA> getPlatos () { return platos; }
	public void setPlatos (ArrayList<PlatoDTOA> platos) { this.platos = platos; }

	/* Rol: LineaPedido o--> Menu */
	private MenuDTOA menus;
	public MenuDTOA getMenus () { return menus; }
	public void setMenus (MenuDTOA menus) { this.menus = menus; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public LineaPedidoDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Cantidad")))
			{
			 
				this.cantidad = (Integer) json.opt("Cantidad");
			 
			}
			

			JSONArray arrayPlatos = json.optJSONArray("Platos");
			if (arrayPlatos != null)
			{
				this.platos = new ArrayList<PlatoDTOA>();
				for (int i = 0; i < arrayPlatos.length(); ++i)
				{
					JSONObject subJson = (JSONObject) arrayPlatos.opt(i);
					PlatoDTOA tmp = new PlatoDTOA();
					tmp.setFromJSON(subJson);
					this.platos.add(tmp);
				}
			}


			JSONObject jsonMenus = json.optJSONObject("Menus");
			if (jsonMenus != null)
			{
				MenuDTOA tmp = new MenuDTOA();
				tmp.setFromJSON(jsonMenus);
				this.menus = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.cantidad != null)
			json.put("Cantidad", this.cantidad.intValue());
		
			

			if (this.platos != null)
			{
				JSONArray jsonArray = new JSONArray();
				for (int i = 0; i < this.platos.size(); ++i)
				{
					jsonArray.put(this.platos.get(i).toJSON());
				}
				json.put("Platos", jsonArray);
			}


			if (this.menus != null)
			{
				json.put("Menus", this.menus.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		LineaComandaDTO dto = new LineaComandaDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setCantidad (this.getCantidad());

		
		
		// Roles
					// TODO: from DTOA [ Menus ] (dataType : MenuDTOA) to DTO [ Menu ]
		
		
		return dto;
	}

	// endregion
}

	