
package TPVNUBEGenEmpleadoRESTAzure.uiModels.DTOA;

import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.*;
import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.utils.*;
import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class PedidoDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private java.util.Date fecha;
	public java.util.Date getFecha () { return fecha; }
	public void setFecha (java.util.Date fecha) { this.fecha = fecha; }
	
	private EstadoComanda estadoPedido;
	public EstadoComanda getEstadoPedido () { return estadoPedido; }
	public void setEstadoPedido (EstadoComanda estadoPedido) { this.estadoPedido = estadoPedido; }
	
	private Double total;
	public Double getTotal () { return total; }
	public void setTotal (Double total) { this.total = total; }
	
	
	/* Rol: Pedido o--> LineaPedido */
	private ArrayList<LineaPedidoDTOA> lineas;
	public ArrayList<LineaPedidoDTOA> getLineas () { return lineas; }
	public void setLineas (ArrayList<LineaPedidoDTOA> lineas) { this.lineas = lineas; }

	/* Rol: Pedido o--> Factura */
	private FacturaDTOA factura;
	public FacturaDTOA getFactura () { return factura; }
	public void setFactura (FacturaDTOA factura) { this.factura = factura; }

	/* Rol: Pedido o--> Mesa */
	private MesaDTOA mesaComanda;
	public MesaDTOA getMesaComanda () { return mesaComanda; }
	public void setMesaComanda (MesaDTOA mesaComanda) { this.mesaComanda = mesaComanda; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public PedidoDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Fecha")))
			{
			 
			 	String stringDate = (String) json.opt("Fecha");
				this.fecha = DateUtils.stringToDateFormat(stringDate);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("EstadoPedido")))
			{
				int enumRawValue = (int) json.opt("EstadoPedido");
				this.estadoPedido = EstadoComanda.fromRawValue(enumRawValue);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Total")))
			{
			 
			 	String stringDouble = String.valueOf(json.opt("Total"));
 				this.total = Double.parseDouble(stringDouble);
			 
			}
			

			JSONObject jsonLineas = json.optJSONObject("Lineas");
			if (jsonLineas != null)
			{
				LineaPedidoDTOA tmp = new LineaPedidoDTOA();
				tmp.setFromJSON(jsonLineas);
				this.lineas = tmp;
			}


			JSONObject jsonFactura = json.optJSONObject("Factura");
			if (jsonFactura != null)
			{
				FacturaDTOA tmp = new FacturaDTOA();
				tmp.setFromJSON(jsonFactura);
				this.factura = tmp;
			}


			JSONObject jsonMesaComanda = json.optJSONObject("MesaComanda");
			if (jsonMesaComanda != null)
			{
				MesaDTOA tmp = new MesaDTOA();
				tmp.setFromJSON(jsonMesaComanda);
				this.mesaComanda = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.fecha != null)
			json.put("Fecha", DateUtils.dateToFormatString(this.fecha));
		
		
		  if (this.estadoPedido != null)
			json.put("EstadoPedido", this.estadoPedido.getRawValue());
		
		
		  if (this.total != null)
			json.put("Total", this.total);
		
			

			if (this.lineas != null)
			{
				json.put("Lineas", this.lineas.toJSON());
			}


			if (this.factura != null)
			{
				json.put("Factura", this.factura.toJSON());
			}


			if (this.mesaComanda != null)
			{
				json.put("MesaComanda", this.mesaComanda.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		ComandaDTO dto = new ComandaDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setFecha (this.getFecha());

	dto.setEstadoPedido (this.getEstadoPedido());

	dto.setTotal (this.getTotal());

		
		
		// Roles
					// TODO: from DTOA [ Lineas ] (dataType : ArrayList<LineaPedidoDTOA>) to DTO [ LineaComanda ]
					// TODO: from DTOA [ Factura ] (dataType : FacturaDTOA) to DTO [ Factura ]
					// TODO: from DTOA [ MesaComanda ] (dataType : MesaDTOA) to DTO [ Mesa ]
		
		
		return dto;
	}

	// endregion
}

	