
package TPVNUBEGenEmpleadoRESTAzure.uiModels.DTOA;

import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.*;
import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.utils.*;
import TPVNUBEGenEmpleadoRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class RolCamareroDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	
	/* Rol: RolCamarero o--> Camarero */
	private CamareroDTOA camarero;
	public CamareroDTOA getCamarero () { return camarero; }
	public void setCamarero (CamareroDTOA camarero) { this.camarero = camarero; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public RolCamareroDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			
			

			JSONObject jsonCamarero = json.optJSONObject("Camarero");
			if (jsonCamarero != null)
			{
				CamareroDTOA tmp = new CamareroDTOA();
				tmp.setFromJSON(jsonCamarero);
				this.camarero = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
			

			if (this.camarero != null)
			{
				json.put("Camarero", this.camarero.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		RolDTO dto = new RolDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
		
		
		// Roles
					// TODO: from DTOA [ Camarero ] (dataType : CamareroDTOA) to DTO [ Camarero ]
		
		
		return dto;
	}

	// endregion
}

	